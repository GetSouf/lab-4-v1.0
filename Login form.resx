<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        tTOxtmeENGbPjOq1x9oeFpIG9N+i2plY2+NCGrMnRPXaY22PDkkDemJUOxNr81Gjxu5BUb32WFsbmiQN
        qN3RrtqZWJuTjTR294zqtcfaPBFQGtjTotqZWNsdQxqzO0f12mNt7RbKkgb0rKh2Jtb2GyGN2W2ieu2x
        tnbipKQBPS+qnYm13TKkMWs3talee6ztuSFpQC+KamdibTcNaczaa6x67bG2diyTNKATotqZWNtNQhqz
        9hqrXnusrR3LJA3IADCcAUBjZwAYzgAgDcwAMJwBQGNnABjOACANzAAwnAFAY2cAGM4AIA3MADCcAUBj
        ZwAYzgAgDcwAMJwBQGNnABjOACANzAAwnAFAY2cAGM4AIA3MADCcAUBjZwAYzgAgDcwAMJwBQGNnABjO
        ACANzAAwnAFAY2cAGM4AIA3MADCcAUBjZwAYzgAgDcwAMJwBQGNnABjOACANzAAwnAFAY2cAGM4AIA3M
        ADCcAUBjZwAYzgAgDcwAMJwBQGNnABjOACANzAAwnAFAY2cAGM4AIA3MADCcAUBjZwAYzgAgDcwAMJwB
        QGNnABjOACANzAAwnAFAY2cAGM4AIA3MADCcAUBjZwAYzgAgDcwAMJwBQGNnABjOACANzAAwnAFAY2cA
        GM4AIA3MADCcAUBjZwAYzgAgDcwAMJwBQGNnABjOACANzAAwnAFAY2cAGM4AIA3MADCcAUBjZwAYzgAg
        DcwAMJwBQGNnABjOACANzAAwnAFAY2cAGM4AIA3MADCcAUBjZwAYzgAgDcwAMJwBQGNnABjOACANzAAw
        nAFAY2cAGM4AIA3MADCcAUBjZwAYzgAgDcwAMJwBQGNnABjOACANzAAwnAFAY2cAGM4AIA3MADCcAUBj
        ZwAYzgAgDcwAMJwBQGNnABjOACANzAAwnAFAY2cAGM4AIA3MADCcAUBjZwAYzgAgDcwAMJwBQGNnABjO
        ACANzAAwnAFAY2cAGM4AIA3MADCcAUBjZwAYzgAgDcwAMJwBQGNnABjOACANzAAwnAFAY2cAGM4AIA3M
        ADCcAUBjZwAYzgAgDcwAMJwBQGNnABjOACANzAAwnAFAY2cAGM4AIA3MADCcAUBjZwAYzgAgDcwAMJwB
        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
</value>
  </data>
</root>